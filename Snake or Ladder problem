// * snake or ladder problem

// Pgm not giving correcct result....need to verify???????????


/*

#include <iostream>
#include <queue>


using namespace std;

struct queueentry{

	int v;
	int dest;
};


int getmindicethrow(int move[],int N)
{

	bool * visited = new bool[N];

	for(int i=0;i<N;i++)
	{
		visited[i]=false;
	}

	queue<queueentry> q ;

	visited[0] = true;


	queueentry s = {0,0};

	q.push(s);

	queueentry qe;

	while(!q.empty())
	{
		qe=q.front();

		int v = qe.v; // collecting vertex number

        if(v==N-1)
			break;

		q.pop();
		for(int j=v+1;j<=(v+3)&&j<N;++j)
		{
		
			if(!visited[j])
			{
				queueentry a;

				a.dest = (qe.dest + 1);
				visited[j] = true;

				if(move[j]!=-1)
					a.v=move[j];
				else
					a.v=j;

				q.push(a);
			}
		
		}
	}

	return qe.dest;
}

int main()
{
	int N=30;

	int moves[30];

	for(int i=0;i<N;i++)
	moves[i]=-1;


	// Ladders
    moves[2] = 21;
    moves[4] = 7;
    moves[10] = 25;
    moves[19] = 28;
	//moves[2]=8; 

    // Snakes
    moves[26] = 0;
    moves[20] = 8;
    moves[16] = 3;
    moves[18] = 6;
	//moves[6]=3;

	cout<<"Min Dice throws required is"<<getmindicethrow(moves,N);

	getchar();
	return 0;
}

*/

